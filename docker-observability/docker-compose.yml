version: "3.8"

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - network
    hostname: zookeeper
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    volumes:
      - ./kafka/:/conf/
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_BROKER_RACK: R1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9080,PLAINTEXT_HOST://localhost:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_MIN_INSYNC_REPLICAS: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DEFAULT.REPLICATION.FACTOR: 1
      KAFKA_NUM.PARTITIONS: 6
      KAFKA_LOG4J_ROOT_LOGLEVEL: ERROR
      KAFKA_TOOLS_LOG4J_LOGLEVEL: ERROR
      KAFKA_LOG4J_LOGGERS: "org.apache.zookeeper=ERROR,org.apache.kafka=ERROR,kafka=ERROR,kafka.cluster=ERROR,kafka.controller=ERROR,kafka.coordinator=ERROR,kafka.log=ERROR,kafka.server=ERROR,kafka.zookeeper=ERROR,state.change.logger=ERROR"
      KAFKA_JMX_PORT: 9100
      KAFKA_JMX_HOSTNAME: kafka
      KAFKA_JMX_OPTS: >-
        -Djava.rmi.server.hostname=kafka
        -Dcom.sun.management.jmxremote=true
        -Dcom.sun.management.jmxremote.port=9100
        -Dcom.sun.management.jmxremote.rmi.port=9100
        -Dcom.sun.management.jmxremote.local.only=false
        -Dcom.sun.management.jmxremote.ssl=false
        -Dcom.sun.management.jmxremote.authenticate=false
      KAFKA_OPTS: >-
        -javaagent:/conf/jmx_prometheus_javaagent-0.16.1.jar=kafka:9070:/conf/kafka_broker.yml
    networks:
      - network
    hostname: kafka
    ports:
      - "9091:9091"

  kafka-lag-exporter:
    image: lightbend/kafka-lag-exporter:latest
    depends_on:
      - kafka
    volumes:
      - ./kafka-lag-exporter:/conf/
    environment:
      - _JAVA_OPTIONS='-Dconfig.file=/conf/application.conf'
    networks:
      - network
    hostname: kafka-lag-exporter
    ports:
      - "8000:8000"

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus
    networks:
      - network
    hostname: prometheus
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    networks:
      - network
    hostname: grafana
    ports:
      - 3000:3000

  jaeger:
    image: jaegertracing/all-in-one:latest
    ports:
      - 5775:5775/udp
      - 6831:6831/udp
      - 6832:6832/udp
      - 5778:5778
      - 16686:16686
      - 14268:14268
      - 14250:14250
      - 9411:9411
    hostname: jaeger
    networks:
      - network
    environment:
      COLLECTOR_ZIPKIN_HOST_PORT: 9411

#  zipkin:
#    image: openzipkin/zipkin
#    networks:
#      - network
#    hostname: zipkin
#    environment:
#      - STORAGE_TYPE=mem
#      - SELF_TRACING_ENABLED=true
#      - ZIPKIN_LOG_LEVEL=DEBUG
#   ports:
#      - 9411:9411

  app-producer:
    image: docker.io/library/app-producer:1.0-SNAPSHOT
    depends_on:
      - kafka
    networks:
      - network
    hostname: app-producer
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - 8080:8080

  app-consumer:
    image: docker.io/library/app-consumer:1.0-SNAPSHOT
    depends_on:
      - kafka
    networks:
      - network
    hostname: app-producer
    environment:
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - 8090:8090

networks:
  network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.3.1/24